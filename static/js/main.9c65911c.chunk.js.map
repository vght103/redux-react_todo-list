{"version":3,"sources":["routes/login/Login.jsx","store.js","components/todo/Todo.jsx","routes/home/Home.jsx","App.jsx","index.js"],"names":["Login","props","className","type","placeholder","to","TODO_ADD","TODO_DELETE","store","createStore","state","action","text","id","Date","getTime","completed","filter","todo","actionCreators","connect","dispatch","ownProps","console","log","onDelete","onClick","todos","addTodo","useState","inputText","setInputText","onSubmit","event","a","preventDefault","value","onChange","target","map","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"qRAoCeA,EAhCD,SAACC,GACb,OACE,0BAASC,UAAU,QAAnB,UACE,uCAEA,+BACE,sBAAKA,UAAU,YAAf,UACE,uBACEC,KAAK,QACLD,UAAU,cACVE,YAAY,kEAEd,uBACED,KAAK,WACLD,UAAU,iBACVE,YAAY,wEAEd,wBAAQF,UAAU,eAAlB,qCAIJ,+BACE,cAAC,IAAD,UACE,4DAEF,cAAC,IAAD,CAAMG,GAAG,IAAT,SACE,mE,iDC3BJC,EAAW,WACXC,EAAc,cAgCdC,EAAQC,aAdE,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACtC,OAAQA,EAAOR,MACb,KAAKG,EACH,MAAM,GAAN,mBACKI,GADL,CAEE,CAAEE,KAAMD,EAAOC,KAAMC,IAAI,IAAIC,MAAOC,UAAWC,WAAW,KAE9D,KAAKT,EACH,OAAOG,EAAMO,QAAO,SAACC,GAAD,OAAUA,EAAKL,KAAOF,EAAOE,MACnD,QACE,OAAOH,MAMAS,EA/BK,SAACP,GACjB,MAAO,CACLT,KAAMG,EACNM,SA4BSO,EAxBQ,SAACN,GACpB,MAAO,CACLV,KAAMI,EACNM,OAsBWL,ICjBAY,G,MAAAA,YAAQ,MAPE,SAACC,EAAUC,GAElC,OADAC,QAAQC,IAAIF,EAASJ,KAAKL,IACnB,CACLY,SAAU,kBAAMJ,EAASF,EAA4BG,EAASJ,KAAKL,SAIxDO,EAjBF,SAAC,GAAwB,IAAtBF,EAAqB,EAArBA,KAAMO,EAAe,EAAfA,SACpB,OACE,+BACE,uBAAOtB,KAAK,aACZ,gCAAQe,EAAKN,OACb,wBAAQc,QAASD,EAAjB,iCCyDSL,G,MAAAA,aAdS,SAACV,GAEvB,MAAO,CACLiB,MAAOjB,MAKc,SAACW,GACxB,MAAO,CACLO,QAAS,SAAChB,GAAD,OAAUS,EAASF,EAAyBP,QAI1CQ,EA5DF,SAAC,GAAwB,IAAtBO,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,EACDC,mBAAS,IADR,mBAC5BC,EAD4B,KACjBC,EADiB,KAO7BC,EAAQ,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACfD,EAAME,iBAEDL,EAHU,iDAWfF,EAAQE,GACRC,EAAa,IAZE,2CAAH,sDAed,OACE,0BAAS7B,UAAU,OAAnB,UACE,yBAAQA,UAAU,SAAlB,UACE,oBAAIA,UAAU,QAAd,uBACA,uBAAM8B,SAAUA,EAAhB,UACE,uBAAOI,MAAON,EAAWO,SAxBhB,SAACJ,GAChBF,EAAaE,EAAMK,OAAOF,UAwBpB,+CAGJ,6BACGT,EAAMY,KAAI,SAACrB,GAAD,OACT,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKL,SAIpB,cAAC,IAAD,CAAMR,GAAG,SAAT,SACE,8D,MCzBOmC,MAff,WACE,OACE,qBAAKtC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,YCPVC,IAASC,OACP,cAAC,IAAD,CAAUpC,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFqC,SAASC,eAAe,W","file":"static/js/main.9c65911c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./login.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  return (\r\n    <section className=\"login\">\r\n      <h2>Login</h2>\r\n\r\n      <form>\r\n        <div className=\"form-wrap\">\r\n          <input\r\n            type=\"email\"\r\n            className=\"login-email\"\r\n            placeholder=\"이메일을 입력해주세요\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"login-password\"\r\n            placeholder=\"패스워드를 입력해주세요\"\r\n          />\r\n          <button className=\"login-button\">로그인</button>\r\n        </div>\r\n      </form>\r\n\r\n      <ul>\r\n        <Link>\r\n          <li>회원가입</li>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <li>돌아가기</li>\r\n        </Link>\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\nexport default Login;\r\n","import { createStore } from \"redux\";\r\n\r\n// dispatch type 을 사용할 때의 변수 지정\r\nconst TODO_ADD = \"TODO_ADD\";\r\nconst TODO_DELETE = \"TODO_DELETE\";\r\nconst TOTO_COMPLETED = \"TODO_COMPLETED\";\r\n\r\nconst onAddTodo = (text) => {\r\n  return {\r\n    type: TODO_ADD,\r\n    text,\r\n  };\r\n};\r\n\r\nconst onDeleteTodo = (id) => {\r\n  return {\r\n    type: TODO_DELETE,\r\n    id,\r\n  };\r\n};\r\n\r\n//  state, action 을 받아서 기존 state를 변경한다\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TODO_ADD:\r\n      return [\r\n        ...state,\r\n        { text: action.text, id: new Date().getTime(), completed: false },\r\n      ];\r\n    case TODO_DELETE:\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport const actionCreators = { onAddTodo, onDeleteTodo };\r\nexport default store;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from \"../../store\";\r\nimport \"./todo.scss\";\r\n\r\nconst Todo = ({ todo, onDelete }) => {\r\n  return (\r\n    <li>\r\n      <input type=\"checkbox\" />\r\n      <label>{todo.text}</label>\r\n      <button onClick={onDelete}>삭제</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapDispatchProps = (dispatch, ownProps) => {\r\n  console.log(ownProps.todo.id);\r\n  return {\r\n    onDelete: () => dispatch(actionCreators.onDeleteTodo(ownProps.todo.id)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchProps)(Todo);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Todo from \"../../components/todo/Todo\";\r\nimport { actionCreators } from \"../../store\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = ({ todos, addTodo }) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!inputText) {\r\n      return;\r\n    }\r\n\r\n    // await dbService.collection(\"todo-list\").add({\r\n    //   createdAt: new Date(),\r\n    //   todoText: inputText,\r\n    // });\r\n    addTodo(inputText);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"home\">\r\n      <header className=\"header\">\r\n        <h1 className=\"title\">Todo List</h1>\r\n        <form onSubmit={onSubmit}>\r\n          <input value={inputText} onChange={onChange} />\r\n          <button>Add</button>\r\n        </form>\r\n      </header>\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <Todo key={todo.id} todo={todo} />\r\n        ))}\r\n      </ul>\r\n\r\n      <Link to=\"/login\">\r\n        <div>로그인</div>\r\n      </Link>\r\n    </section>\r\n  );\r\n};\r\n\r\n// store에서 getState() 해오기\r\n//\r\nconst mapStateToProps = (state) => {\r\n  // 가져온 state를 리턴하여 자기자신의 prop에 저장하여 사용\r\n  return {\r\n    todos: state,\r\n  };\r\n};\r\n\r\n// 변경된 state를 전달\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    addTodo: (text) => dispatch(actionCreators.onAddTodo(text)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(Home);\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Login from \"./routes/login/Login\";\nimport Home from \"./routes/home/Home\";\nimport \"./app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}